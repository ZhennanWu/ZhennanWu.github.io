{"version":3,"sources":["utils/translate_factor.ts","components/worldmap/WorldMap.tsx","datasets/Food_Supply_Quantity_kg_Data.csv","datasets/countries.csv","utils/country_code_translator.ts","data.ts","components/donut_chart/donut_chart.tsx","icons/icons.tsx","icons/deathrate.svg","icons/obesity.svg","icons/undernourished.svg","icons/alcohol.svg","icons/animal.svg","icons/vegetables.svg","icons/fruits.svg","icons/nuts.svg","icons/fishseafood.svg","icons/cereals.svg","icons/milk.svg","icons/starchyroots.svg","icons/sugar.svg","icons/eggs.svg","icons/oil.svg","components/par_coord/par_coord.tsx","components/side_panel/side_panel.tsx","components/overview/overview.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["translateFactor","DeathRate","Obesity","Undernourished","Alcohol","Animal","Vegetables","Fruits","Nuts","FishSeafood","Cereals","Milk","StarchyRoots","Sugar","Eggs","Oil","world","require","width","height","projection","d3","scale","translate","precision","path","domain","deathRateColor","range","continents","continentNames","AF","AS","EU","NA","SA","OC","continentColor","UNKNOWN","WorldMap","props","ref","useRef","div","useMemo","countries","countryData","topojson","objects","features","forEach","country","properties","geo","d","centroid","data","match","find","geoCountry","name","Country","stat","validCountryData","filter","datum","Confirmed_abs","sort","a","b","useState","svg","setSvg","useEffect","current","append","remove","attr","gMap","setGMap","g","gBub","setGBub","gb","gCor","setGCor","type","tooltip","setTooltip","country_clicked","event","newCountry","console","log","indexOf","classed","onSelectionChanged","raise","keyWidth","length","continentKeyScale","continent","selectAll","enter","on","map","join","transition","duration","keyElementWidth","text","this","getBBox","empty","linearGradient","pl","pt","style","select","xExtent","Math","min","max","ceil","x","y","call","Continent","sqrt","html","toFixed","lower","getX","Eswatini","isNumber","n","Number","Promise","all","datapath","countryCode","then","dataCsv","countryCodeCsv","_data","eventCountry","entry","CountryName","ContinentCode","parseFloat","Confirmed","Deaths","Recovered","Population","parseInt","Active","Undernourished_txt","floor","substring","replacementName","DonutChart","radius","color","Object","keys","data_ready","key","localeCompare","value","pie","entries","valueOf","arc","innerRadius","outerRadius","outerArc","posA","posB","posC","midangle","startAngle","endAngle","PI","pos","icons","ParCoord","dimensions","i","extent","padding","ga","factor","each","onFactorChanged","undefined","p","countryColor","Text","Typography","SidePanel","Link","Select","Option","chartData","Others","display","flexDirection","margin","className","flexGrow","marginTop","marginRight","backgroundColor","Title","Overview","selectedCountries","setSelectedCountries","focuedFactor","setFocusedFactor","usePromise","detailData","paddingTop","textAlign","level","minDate","Layout","Header","Footer","Sider","Content","Date","maxDate","App","round","getTime","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c78b8bd.chunk.js","sourcesContent":["export const translateFactor: { [factor: string]: string } = {\r\n  DeathRate: \"Death rate from COVID (%)\",\r\n  Obesity: \"Obesity rate (%)\",\r\n  Undernourished: \"Undernourished rate (%)\",\r\n  Alcohol: \"Alcohol beverages intake by kg (%)\",\r\n  Animal: \"Meat & animal product intake by kg (%)\",\r\n  Vegetables: \"Vegetables intake by kg (%)\",\r\n  Fruits: \"Fruits intake by kg (%)\",\r\n  Nuts: \"Nuts intake by kg (%)\",\r\n  FishSeafood: \"Fish & Seafood intake by kg (%)\",\r\n  Cereals: \"Cereals intake by kg (%)\",\r\n  Milk: \"Milk intake by kg (%)\",\r\n  StarchyRoots: \"Starchy Roots intake by kg (%)\",\r\n  Sugar: \"Sugar intake by kg (%)\",\r\n  Eggs: \"Eggs intake by kg (%)\",\r\n  Oil: \"Oil intake by kg (%)\",\r\n};\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport * as topojson from \"topojson\";\r\n// import world from \"../../datasets/countries-110m.json\";\r\nimport \"./WorldMap.scss\";\r\nimport { GeometryCollection, Objects, Topology } from \"topojson-specification\";\r\nimport { GeoJsonProperties } from \"geojson\";\r\nimport { DataEntry } from \"../../data\";\r\nimport React from \"react\";\r\nimport { translateFactor } from \"../../utils/translate_factor\";\r\n\r\nlet world: Topology = require(\"../../datasets/countries-110m.json\");\r\n\r\ntype Country = GeometryCollection<GeoJsonProperties>;\r\n\r\nconst width = 938;\r\nconst height = 600;\r\nconst xyz = [width / 2, height / 1.5, 1];\r\nconst projection = d3\r\n  .geoMercator()\r\n  .scale(150)\r\n  // .scale((width + 1) / 2 / Math.PI)\r\n  .translate([width / 2, height / 1.5])\r\n  .precision(0.1);\r\nconst path = d3.geoPath().projection(projection);\r\n\r\nconst domain = [0, 10];\r\n\r\nconst deathRateColor = d3\r\n  .scaleLinear()\r\n  .domain(domain)\r\n  //@ts-ignore\r\n  .range([\"white\", \"red\"]);\r\n\r\nconst xmargin = 40;\r\nconst ymargin = 40;\r\n\r\nfunction get_xyz(d: Country | undefined) {\r\n  return path.centroid(d as any);\r\n  var bounds = path.bounds(d as any);\r\n  var w_scale = (bounds[1][0] - bounds[0][0]) / width;\r\n  var h_scale = (bounds[1][1] - bounds[0][1]) / height;\r\n  var z = 0.96 / Math.max(w_scale, h_scale);\r\n  var x = (bounds[1][0] + bounds[0][0]) / 2;\r\n  var y = (bounds[1][1] + bounds[0][1]) / 2 + height / z / 6;\r\n  return [x, y, z];\r\n}\r\n\r\nconst continents = [\"AF\", \"AS\", \"EU\", \"NA\", \"SA\", \"OC\", \"UNKNOWN\"];\r\n\r\nconst continentNames = {\r\n  AF: \"Africa\",\r\n  AS: \"Asia\",\r\n  EU: \"Europe\",\r\n  NA: \"North America\",\r\n  SA: \"South America\",\r\n  OC: \"Oceana\",\r\n};\r\n\r\nconst continentColor: any = {\r\n  NA: \"#1f77b4\",\r\n  // AS: \"#ff7f0e\",\r\n  EU: \"#2ca02c\",\r\n  SA: \"#9467bd\",\r\n  AF: \"#8c564b\",\r\n  OC: \"#e377c2\",\r\n  UNKNOWN: \"#7f7f7f\",\r\n  AS: \"#bcbd22\",\r\n  // \"#17becf\"\r\n};\r\n\r\nconst WorldMap = (props: {\r\n  // limit: number;\r\n  data: DataEntry[];\r\n  onSelectionChanged: (countries: string[]) => void;\r\n  type: \"map\" | string;\r\n}) => {\r\n  const ref = useRef(null);\r\n  const div = useMemo(() => <div ref={ref} />, []);\r\n\r\n  let countries = useRef<string[]>([]);\r\n\r\n  const countryData = useMemo(() => {\r\n    const countryData = topojson.feature(\r\n      world,\r\n      world.objects.countries as GeometryCollection<GeoJsonProperties>\r\n    ).features;\r\n\r\n    countryData.forEach(\r\n      (country) => (country.properties!.geo = get_xyz(country as any))\r\n    );\r\n    for (const country of props.data) {\r\n      let match = countryData.find(\r\n        (geoCountry) => geoCountry.properties!.name === country.Country\r\n      );\r\n      if (!match) {\r\n        // console.log(country.Country);\r\n      } else {\r\n        match.properties!.stat = country;\r\n      }\r\n    }\r\n    return countryData;\r\n  }, [props.data]);\r\n\r\n  const validCountryData = useMemo(() => {\r\n    const validCountryData = countryData.filter(\r\n      (datum) => datum.properties!.stat?.Confirmed_abs\r\n    );\r\n    validCountryData.sort(\r\n      (a, b) =>\r\n        -a.properties!.stat.Confirmed_abs + b.properties!.stat.Confirmed_abs\r\n    );\r\n    return validCountryData;\r\n  }, [countryData]);\r\n\r\n  let [svg, setSvg] = useState<d3.Selection<\r\n    SVGSVGElement,\r\n    any,\r\n    any,\r\n    any\r\n  > | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!ref.current) return;\r\n    const svg = d3.select(ref.current).append(\"svg\");\r\n    setSvg(svg);\r\n    return () => {\r\n      svg.remove();\r\n    };\r\n  }, [ref.current]);\r\n\r\n  useEffect(() => {\r\n    if (!svg) return;\r\n    svg\r\n      .attr(\"preserveAspectRatio\", \"xMidYMid\")\r\n      .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"background\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height);\r\n  }, [svg]);\r\n\r\n  let [gMap, setGMap] = useState<d3.Selection<\r\n    SVGGElement,\r\n    any,\r\n    any,\r\n    any\r\n  > | null>(null);\r\n  useEffect(() => {\r\n    if (!svg) return;\r\n    const g = svg?.append(\"g\");\r\n    setGMap(g);\r\n    return () => {\r\n      g.remove();\r\n    };\r\n  }, [svg]);\r\n\r\n  let [gBub, setGBub] = useState<d3.Selection<\r\n    SVGGElement,\r\n    any,\r\n    any,\r\n    any\r\n  > | null>(null);\r\n  useEffect(() => {\r\n    if (!svg) return;\r\n    const gb = svg?.append(\"g\");\r\n    setGBub(gb);\r\n    return () => {\r\n      gb.remove();\r\n    };\r\n  }, [svg]);\r\n\r\n  let [gCor, setGCor] = useState<d3.Selection<\r\n    SVGGElement,\r\n    any,\r\n    any,\r\n    any\r\n  > | null>(null);\r\n  useEffect(() => {\r\n    if (!svg) return;\r\n    const gCor = svg.append(\"g\");\r\n    setGCor(gCor);\r\n    return () => {\r\n      gCor.remove();\r\n    };\r\n  }, [svg, props.type]);\r\n\r\n  let [tooltip, setTooltip] = useState<d3.Selection<\r\n    HTMLDivElement,\r\n    any,\r\n    any,\r\n    any\r\n  > | null>(null);\r\n  useEffect(() => {\r\n    if (!ref.current) return;\r\n\r\n    const tooltip = d3\r\n      .select(ref.current)\r\n      .append(\"div\")\r\n      .attr(\"class\", \"tooltip\");\r\n    setTooltip(tooltip);\r\n    return () => {\r\n      tooltip.remove();\r\n    };\r\n  }, [ref.current]);\r\n\r\n  function country_clicked(event: any, d: Country) {\r\n    if (!gMap || !svg) return;\r\n    let xyz = [width / 2, height / 1.5, 1];\r\n    let newCountry = (d?.properties as any)?.name;\r\n    console.log(\"clicked \" + newCountry);\r\n    if (countries.current.indexOf(newCountry) !== -1) {\r\n      d3.selectAll(\r\n        \"[id='\" + newCountry + \"'],[id='circ\" + newCountry + \"']\"\r\n      ).classed(\"active\", false);\r\n      countries.current = countries.current.filter(\r\n        (country) => country != newCountry\r\n      );\r\n      props.onSelectionChanged(countries.current);\r\n    } else {\r\n      d3.selectAll(\"[id='\" + newCountry + \"'],[id='circ\" + newCountry + \"']\")\r\n        .attr(\"class\", \"active\")\r\n        .raise();\r\n      countries.current = [...countries.current, newCountry];\r\n      props.onSelectionChanged(countries.current);\r\n    }\r\n  }\r\n\r\n  // Draw continent keys\r\n  useEffect(() => {\r\n    if (!svg) return;\r\n    const keyElementWidth = 100;\r\n    const keyElementHeight = 30;\r\n    const keyWidth = keyElementWidth * (continents.length - 1);\r\n    const continentKeyScale = d3\r\n      .scaleBand()\r\n      .domain(continents.filter((continent) => continent != \"UNKNOWN\"))\r\n      .range([width - keyWidth, width]);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"class\", \"continent-key\")\r\n      // .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .selectAll(\"g\")\r\n      .data(continents.filter((continent) => continent != \"UNKNOWN\"))\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"continent-key-element\");\r\n\r\n    d3.selectAll(\"g.continent-key-element\")\r\n      .append(\"rect\")\r\n      .attr(\"width\", keyElementWidth)\r\n      .attr(\"height\", keyElementHeight)\r\n      .attr(\"x\", function (d: any) {\r\n        return continentKeyScale(d) as any;\r\n      })\r\n      .attr(\"fill\", function (d: any) {\r\n        return continentColor[d] as any;\r\n      })\r\n      .on(\"mouseover\", function (event, d: any) {\r\n        d3.selectAll(\r\n          continents\r\n            .filter((continent) => continent != d)\r\n            .map((continent) => \".\" + continent)\r\n            .join(\",\")\r\n        )\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\"opacity\", 0);\r\n      })\r\n      .on(\"mouseout\", function (event, d: any) {\r\n        d3.selectAll(continents.map((continent) => \".\" + continent).join(\",\"))\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\"opacity\", 1);\r\n      });\r\n\r\n    d3.selectAll(\"g.continent-key-element\")\r\n      .append(\"text\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"x\", function (d: any) {\r\n        return (continentKeyScale(d) as number) + keyElementWidth / 2;\r\n      })\r\n      .text(function (d: any) {\r\n        return (continentNames as any)[d] || continentNames;\r\n      })\r\n      .attr(\"fill\", \"white\")\r\n      .attr(\"pointer-events\", \"none\");\r\n\r\n    // The text BBox has non-zero values only after rendering\r\n    d3.selectAll(\"g.continent-key-element text\").attr(\"y\", function (d) {\r\n      var textHeight = (this as any).getBBox().height;\r\n      // The BBox.height property includes some extra height we need to remove\r\n      var unneededTextHeight = 4;\r\n      return (keyElementHeight + textHeight) / 2 - unneededTextHeight;\r\n    });\r\n  }, [svg]);\r\n\r\n  // Draw world map background\r\n  useEffect(() => {\r\n    if (!svg || !gMap || gMap.empty()) return;\r\n    gMap\r\n      .append(\"g\")\r\n      .attr(\"id\", \"countries\")\r\n      .selectAll(\"path\")\r\n      .data(countryData)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"id\", (d) => d.properties!.name)\r\n      .attr(\"d\", path as any)\r\n      .attr(\"fill\", (d) => {\r\n        let stat = d.properties!.stat as DataEntry | undefined;\r\n        if (stat) {\r\n          return deathRateColor(stat.DeathRate);\r\n        }\r\n        return null;\r\n      })\r\n      .on(\"click\", country_clicked as any);\r\n\r\n    const pl = 30;\r\n    const pt = 40;\r\n    const linearGradient = gMap\r\n      .append(\"defs\")\r\n      .append(\"linearGradient\")\r\n      .attr(\"id\", \"linearColor\")\r\n      //Color gradient direction\r\n      .attr(\"x1\", \"0%\")\r\n      .attr(\"y1\", \"0%\")\r\n      .attr(\"x2\", \"100%\")\r\n      .attr(\"y2\", \"0%\");\r\n    // //Set rectangle bar start color\r\n    linearGradient\r\n      .append(\"stop\")\r\n      .attr(\"offset\", \"0%\")\r\n      .attr(\"stop-color\", \"white\");\r\n    // //Set end color\r\n    linearGradient\r\n      .append(\"stop\")\r\n      .attr(\"offset\", \"100%\")\r\n      .attr(\"stop-color\", \"#d62728\");\r\n\r\n    gMap\r\n      .append(\"rect\")\r\n      .attr(\"x\", pl - 30)\r\n      .attr(\"y\", pt - 40) // 83 is the height of the rectangle\r\n      //Width and height of rectangle\r\n      .attr(\"width\", 180)\r\n      .attr(\"height\", 50)\r\n      //Set the color by referring to the id above\r\n      .style(\"fill\", \"white\");\r\n    gMap\r\n      .append(\"rect\")\r\n      //x. Coordinates of the upper left corner of the Y rectangle\r\n      .attr(\"x\", pl)\r\n      .attr(\"y\", pt - 10) // 83 is the height of the rectangle\r\n      //Width and height of rectangle\r\n      .attr(\"width\", 100)\r\n      .attr(\"height\", 10)\r\n      //Set the color by referring to the id above\r\n      .style(\"fill\", \"url(#\" + linearGradient.attr(\"id\") + \")\");\r\n    //Set text\r\n\r\n    // Data initial value\r\n    gMap\r\n      .append(\"text\")\r\n      .attr(\"x\", pl - 20)\r\n      .attr(\"y\", pt)\r\n      .text(0)\r\n      .classed(\"linear-text\", true);\r\n    // visualMap title\r\n    gMap\r\n      .append(\"text\")\r\n      .attr(\"x\", pl + 20)\r\n      .attr(\"y\", pt - 20) // 8 for padding\r\n      .text(\"Death Rate:\")\r\n      .classed(\"linear-text\", true);\r\n    //Data terminal value\r\n    gMap\r\n      .append(\"text\")\r\n      .attr(\"x\", pl + 100)\r\n      .attr(\"y\", pt) // 12 is the font size\r\n      .text(domain[1] + \"%\")\r\n      .classed(\"linear-text\", true);\r\n  }, [gMap, props.data]);\r\n\r\n  useEffect(() => {\r\n    if (!gMap) return;\r\n    for (const country of countries.current) {\r\n      gMap\r\n        .select(\"[id='\" + country + \"']\")\r\n        .raise()\r\n        .attr(\"class\", \"active\");\r\n    }\r\n  }, [gMap, countries.current]);\r\n\r\n  // Drawing axis\r\n  useEffect(() => {\r\n    console.log([gCor, props.type]);\r\n    if (!gCor || props.type === \"map\") return;\r\n    const xExtent = d3.extent(props.data, function (d) {\r\n      return (d as any)[props.type === \"map\" ? \"Obesity\" : props.type];\r\n    }) as [number, number];\r\n    xExtent[0] = Math.min(xExtent[0], 0);\r\n    xExtent[1] = Math.max(1, Math.ceil(xExtent[1]));\r\n    const x = d3\r\n      .scaleLinear()\r\n      .domain(xExtent)\r\n      .range([xmargin, width - xmargin]);\r\n    const y = d3\r\n      .scaleLinear()\r\n      .domain([0, 10])\r\n      .range([height - ymargin, ymargin]);\r\n    gCor\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + (height - ymargin) + \")\")\r\n      .call(d3.axisBottom(x));\r\n    gCor\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + xmargin + \", 0)\")\r\n      .call(d3.axisLeft(y));\r\n\r\n    gCor\r\n      .append(\"text\")\r\n      .text(translateFactor[props.type])\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height - 10) + \")\");\r\n\r\n    gCor\r\n      .append(\"text\")\r\n      .text(\"Death rate (%)\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\r\n        \"transform\",\r\n        \"translate(\" + 20 + \",\" + height / 2 + \") rotate(-90)\"\r\n      );\r\n  }, [gCor, props.data, props.type]);\r\n\r\n  // Hide/show map\r\n  useEffect(() => {\r\n    if (props.type != \"map\") {\r\n      gMap?.transition().duration(1000).attr(\"opacity\", 0);\r\n    } else {\r\n      gMap?.transition().duration(1000).attr(\"opacity\", 1);\r\n    }\r\n  }, [gMap, props.type]);\r\n\r\n  useEffect(() => {\r\n    if (!gBub) return;\r\n    gBub\r\n      .attr(\"id\", \"bubbles\")\r\n      .selectAll(\"circle\")\r\n      .data(validCountryData)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"id\", (d) => \"circ\" + d.properties!.name)\r\n      .attr(\"class\", (d) => d.properties!.stat.Continent)\r\n      .attr(\"r\", (d) => Math.sqrt(d.properties!.stat.Confirmed_abs) / 2000 + 1)\r\n      // .attr(\"cx\", (d) => d.properties!.geo[0])\r\n      // .attr(\"cy\", (d) => d.properties!.geo[1])\r\n      // .attr(\"pointer-events\", \"none\")\r\n      .attr(\"fill\", (d) => {\r\n        // let stat = d.properties!.stat as DataEntry | undefined;\r\n        // if (stat) {\r\n        //   return color(stat.Confirmed);\r\n        // }\r\n        // return null;\r\n        return continentColor[d.properties!.stat.Continent] as any;\r\n      })\r\n      .on(\"click\", country_clicked as any)\r\n      .on(\"mousemove\", function (event, d: any) {\r\n        if (!tooltip) return;\r\n        const datum = d.properties!.stat as DataEntry;\r\n        tooltip\r\n          .html(\r\n            datum.Country +\r\n              \"<br/>Confirmed cases: \" +\r\n              datum.Confirmed_abs +\r\n              \"<br/> Death rate: \" +\r\n              datum.DeathRate.toFixed(2) +\r\n              \"%\"\r\n          )\r\n          .style(\"top\", d3.pointer(event, svg)[1] + \"px\")\r\n          .style(\"left\", d3.pointer(event, svg)[0] + 10 + \"px\")\r\n          .raise()\r\n          .style(\"display\", \"block\");\r\n      })\r\n      .on(\"mouseout\", function () {\r\n        tooltip?.html(null).lower().style(\"display\", \"none\");\r\n      });\r\n  }, [props.data, gBub]);\r\n\r\n  useEffect(() => {\r\n    if (!gBub) return;\r\n    const xExtent = d3.extent(props.data, function (d) {\r\n      return (d as any)[props.type === \"map\" ? \"Obesity\" : props.type];\r\n    }) as [number, number];\r\n    xExtent[0] = Math.min(xExtent[0], 0);\r\n    xExtent[1] = Math.max(1, Math.ceil(xExtent[1]));\r\n    const x = d3\r\n      .scaleLinear()\r\n      .domain(xExtent)\r\n      .range([xmargin, width - xmargin]);\r\n    const y = d3\r\n      .scaleLinear()\r\n      .domain([0, 10])\r\n      .range([height - ymargin, ymargin]);\r\n    function getX(d: any, type: string) {\r\n      if (type == \"map\") {\r\n        return d.properties!.geo[0];\r\n      } else {\r\n        return x(d.properties!.stat[type]);\r\n      }\r\n    }\r\n    gBub\r\n      .attr(\"id\", \"bubbles\")\r\n      .selectAll(\"circle\")\r\n      .transition()\r\n      .duration(1000)\r\n      .attr(\"cx\", (d: any) => getX(d, props.type))\r\n      .attr(\"cy\", (d: any) =>\r\n        props.type == \"map\"\r\n          ? d.properties!.geo[1]\r\n          : y(d.properties!.stat.DeathRate)\r\n      );\r\n  }, [props.data, gBub, props.type]);\r\n\r\n  return div;\r\n};\r\n\r\n// const WorldMap = React.memo(_WorldMap);\r\nexport default WorldMap;\r\n","export default __webpack_public_path__ + \"static/media/Food_Supply_Quantity_kg_Data.e223a0c1.csv\";","export default __webpack_public_path__ + \"static/media/countries.54baeafb.csv\";","export function dataCountryToGeologyCountry(eventCountry: string) {\r\n  return a[eventCountry] || eventCountry;\r\n}\r\n\r\nconst a: { [dataCountry: string]: string | undefined } = {\r\n  // Barbados: \"\",\r\n  \"Bosnia and Herzegovina\": \"Bosnia and Herz.\",\r\n  // \"Cabo Verde\": \"\",\r\n  \"Central African Republic\": \"Central African Rep.\",\r\n  // \"Cote d'Ivoire\": \"\",\r\n  \"Dominican Republic\": \"Dominican Rep.\",\r\n  Eswatini: \"eSwatini\",\r\n  \"Iran (Islamic Republic of)\": \"Iran\",\r\n  \"Korea, South\": \"South Korea\",\r\n  // Maldives: \"\",\r\n  // Malta: \"\",\r\n  // Mauritius: \"\",\r\n  \"North Macedonia\": \"Macedonia\",\r\n  \"Russian Federation\": \"Russia\",\r\n  // \"Saint Vincent and the Grenadines\": \"\",\r\n  // \"Sao Tome and Principe\": \"\",\r\n  \"United Republic of Tanzania\": \"Tanzania\",\r\n  \"Venezuela (Bolivarian Republic of)\": \"Venezuela\",\r\n};\r\n","import * as d3 from \"d3\";\r\n//@ts-ignore\r\nimport datapath from \"./datasets/Food_Supply_Quantity_kg_Data.csv\";\r\n//@ts-ignore\r\nimport countryCode from \"./datasets/countries.csv\";\r\n\r\nimport { dataCountryToGeologyCountry } from \"./utils/country_code_translator\";\r\nfunction processData() {\r\n  return Promise.all( [d3.csv(datapath), d3.csv(countryCode)]).then(([dataCsv, countryCodeCsv]) => {\r\n    const _data = (dataCsv as unknown) as any[];\r\n    for (let entry of _data) {\r\n      entry.Country = dataCountryToGeologyCountry(entry.Country);\r\n      entry.Continent = countryCodeCsv.find((country) => country.CountryName === entry.Country)?.ContinentCode || 'UNKNOWN';\r\n      entry.Alcohol = parseFloat(entry[\"Alcoholic Beverages\"]) || 0;\r\n      entry.Animal =\r\n        (parseFloat(entry[\"Animal fats\"]) || 0) +\r\n        (parseFloat(entry[\"Animal Products\"]) || 0) +\r\n        (parseFloat(entry[\"Meat\"]) || 0) +\r\n        (parseFloat(entry[\"Offals\"]) || 0);\r\n      entry.FishSeafood =\r\n        (parseFloat(entry[\"Aquatic Product, Other\"]) || 0) +\r\n        (parseFloat(entry[\"Fish, Seafood\"]) || 0);\r\n      entry.Cereals = parseFloat(entry[\"Cereals - Excluding Beer\"]) || 0;\r\n      entry.Eggs = parseFloat(entry[\"Eggs\"]) || 0;\r\n      entry.Fruits = parseFloat(entry[\"Fruits - Excluding Wine\"]) || 0;\r\n      entry.Oil =\r\n        (parseFloat(entry[\"Oilcrops\"]) || 0) +\r\n        (parseFloat(entry[\"Vegetable Oils\"]) || 0);\r\n\r\n      entry.Vegetables =\r\n        (parseFloat(entry[\"Vegetables\"]) || 0) +\r\n        (parseFloat(entry[\"Vegetable Products\"]) || 0);\r\n      entry.Milk = parseFloat(entry[\"Milk - Excluding Butter\"]) || 0;\r\n      entry.StarchyRoots = parseFloat(entry[\"Starchy Roots\"]) || 0;\r\n      entry.Sugar =\r\n        (parseFloat(entry[\"Sugar & Sweeteners\"]) || 0) +\r\n        (parseFloat(entry[\"Sugar Crops\"]) || 0);\r\n      entry.Nuts = parseFloat(entry[\"Treenuts\"]) || 0;\r\n      entry.Obesity = parseFloat(entry[\"Obesity\"]);\r\n      entry.Confirmed = parseFloat(entry[\"Confirmed\"]);\r\n      entry.Deaths = parseFloat(entry[\"Deaths\"]);\r\n      entry.Recovered = parseFloat(entry[\"Recovered\"]);\r\n      entry.Population = parseInt(entry[\"Population\"]);\r\n\r\n      entry.Active = parseFloat(entry[\"Active\"]) || 0;\r\n\r\n      entry.Undernourished_txt = entry.Undernourished;\r\n\r\n      entry.DeathRate = entry.Deaths/entry.Confirmed * 100;\r\n\r\n      entry.Confirmed_abs = Math.floor(entry.Confirmed * entry.Population);\r\n\r\n      entry.Undernourished =\r\n        parseFloat(entry.Undernourished) ||\r\n        parseFloat((entry.Undernourished as string).substring(1)) ||\r\n        null;\r\n    }\r\n    return _data.filter(\r\n      (entry) =>\r\n        isNumber(entry.Obesity) &&\r\n        entry.Confirmed &&\r\n        entry.Population &&\r\n        entry.Active &&\r\n        isNumber(entry.Undernourished)\r\n    ) as DataEntry[];\r\n  });\r\n}\r\nfunction isNumber(n: any) {\r\n  return Number(n) === n;\r\n}\r\n\r\nexport const data = processData();\r\n\r\nexport interface DataEntry {\r\n  Country: string;\r\n  Alcohol: number;\r\n  Animal: number;\r\n  Vegetables: number;\r\n  Fruits: number;\r\n  Nuts: number;\r\n  FishSeafood: number;\r\n  Cereals: number;\r\n  Milk: number;\r\n  StarchyRoots: number;\r\n  Sugar: number;\r\n  Eggs: number;\r\n  Oil: number;\r\n  Obesity: number;\r\n  Undernourished: number;\r\n  Undernourished_txt: number;\r\n  Confirmed: number;\r\n  Confirmed_abs: number;\r\n  Deaths: number;\r\n  Recovered: number;\r\n  Active: number;\r\n  Population: number;\r\n  DeathRate: number;\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { schemeGnBu } from \"d3\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { foodTypeColor, } from \"../side_panel/side_panel\";\r\n\r\nconst replacementName: any = {\r\n  Animal: \"Meat & Animal Product\",\r\n  FishSeafood: \"Fish & Seafood\",\r\n  StarchyRoots: \"Starchy Roots\",\r\n};\r\n\r\nexport const DonutChart = (props: { data: { [key: string]: number } }) => {\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    var width = 450;\r\n    var height = 450;\r\n    var margin = 20;\r\n\r\n    var radius = Math.min(width, height) / 2 - margin;\r\n\r\n    var svg = d3\r\n      .select(ref.current)\r\n      .append(\"svg\")\r\n      .attr(\"preserveAspectRatio\", \"xMidYMid\")\r\n      .attr(\"viewBox\", \"-100 0 \" + (width + 200) + \" \" + height);\r\n    //   .attr(\"width\", width)\r\n    //   .attr(\"height\", height);\r\n\r\n    var g = svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n\r\n    var color = d3\r\n      .scaleOrdinal()\r\n      .domain(Object.keys(props.data))\r\n      .range(d3.schemeDark2);\r\n\r\n\r\n    var pie = d3\r\n      .pie()\r\n      .sort((a: any, b: any) => a.key.localeCompare(b.key))\r\n      .value(function (d) {\r\n        return (d as any).value;\r\n      });\r\n    var data_ready = pie(\r\n      Object.entries(props.data).map((entry) => ({\r\n        key: entry[0],\r\n        value: entry[1],\r\n        valueOf: () => entry[1],\r\n      }))\r\n    );\r\n\r\n    var arc = d3\r\n      .arc()\r\n      .innerRadius(radius * 0.5) // This is the size of the donut hole\r\n      .outerRadius(radius * 0.8);\r\n\r\n    // Another arc that won't be drawn. Just for labels positioning\r\n    var outerArc = d3\r\n      .arc()\r\n      .innerRadius(radius * 0.9)\r\n      .outerRadius(radius * 0.9);\r\n\r\n    // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\r\n    g.selectAll(\"allSlices\")\r\n      .data(data_ready)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"d\", arc as any)\r\n      .attr(\"fill\", function (d) {\r\n        return color((d.data as any).key) as any;\r\n      })\r\n      .attr(\"stroke\", \"white\")\r\n      .style(\"stroke-width\", \"2px\")\r\n      .style(\"opacity\", 0.7);\r\n\r\n    // Add the polylines between chart and labels:\r\n    g.selectAll(\"allPolylines\")\r\n      .data(data_ready)\r\n      .enter()\r\n      .append(\"polyline\")\r\n      .attr(\"stroke\", \"black\")\r\n      .style(\"fill\", \"none\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"points\", function (d: any) {\r\n        var posA = arc.centroid(d); // line insertion in the slice\r\n        var posB = outerArc.centroid(d); // line break: we use the other arc generator that has been built only for that\r\n        var posC = outerArc.centroid(d); // Label position = almost the same as posB\r\n        var midangle = d.startAngle + (d.endAngle - d.startAngle) / 2; // we need the angle to see if the X position will be at the extreme right or extreme left\r\n        posC[0] = radius * 0.95 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left\r\n        return [posA, posB, posC] as any;\r\n      });\r\n\r\n    g.selectAll(\"allLabels\")\r\n      .data(data_ready)\r\n      .enter()\r\n      .append(\"text\")\r\n      .text(function (d: any) {\r\n        return replacementName[d.data.key] || d.data.key;\r\n      })\r\n      .attr(\"transform\", function (d: any) {\r\n        var pos = outerArc.centroid(d);\r\n        var midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        pos[0] = radius * 0.99 * (midangle < Math.PI ? 1 : -1);\r\n        return \"translate(\" + pos + \")\";\r\n      })\r\n      .style(\"text-anchor\", function (d) {\r\n        var midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        return midangle < Math.PI ? \"start\" : \"end\";\r\n      });\r\n\r\n    return function () {\r\n      svg.remove();\r\n    };\r\n  }, [props]);\r\n  return <div ref={ref} />;\r\n};\r\n","// export const icons = {\r\n//   Alcohol: (\r\n//     <svg\r\n//       xmlns=\"http://www.w3.org/2000/svg\"\r\n//       version=\"1.1\"\r\n//       x=\"0px\"\r\n//       y=\"0px\"\r\n//       viewBox=\"0 0 164 205\"\r\n//       enable-background=\"new 0 0 164 164\"\r\n//     >\r\n//       <path\r\n//         fill-rule=\"evenodd\"\r\n//         clip-rule=\"evenodd\"\r\n//         d=\"M142.626,79.323H83.7c0.587,47.921,27.698,51.07,27.698,59.77v20.851L89.083,164  c16.054,0,32.107,0,48.16,0l-22.225-4.057l-0.091-20.792C114.928,130.403,142.74,128.261,142.626,79.323L142.626,79.323z   M60.429,164H28.066c-3.857,0-7.012-3.155-7.012-7.012V77.575c0-19.42,14.91-29.173,14.91-40.477V18.945h16.566v17.491  c0,12.54,14.91,21.67,14.91,41.139v79.414C67.441,160.845,64.286,164,60.429,164L60.429,164z M57.734,131.293  c2.497,0,4.542-2.047,4.542-4.543V91.78c0-2.496-2.044-4.542-4.542-4.542H30.762c-2.498,0-4.542,2.044-4.542,4.542v34.97  c0,2.499,2.046,4.543,4.542,4.543H57.734L57.734,131.293z M35.965,17.046V0.32h16.566v16.727H35.965L35.965,17.046z M135.433,89.427  c-0.311,24.551-12.933,32.294-18.478,37.265h-7.414c-5.738-4.56-17.347-13.12-18.647-37.265H135.433L135.433,89.427z   M139.386,81.989c0.08,34.275-15.229,42.759-21.757,48.612h-8.731c-6.309-6.04-21.543-14.815-21.957-48.612H139.386z\"\r\n//       />\r\n//     </svg>\r\n//   ),\r\n//   Animal: (\r\n//     <svg\r\n//       xmlns=\"http://www.w3.org/2000/svg\"\r\n//       viewBox=\"0 0 153 110\"\r\n//       version=\"1.1\"\r\n//       x=\"0px\"\r\n//       y=\"0px\"\r\n//       fill-rule=\"evenodd\"\r\n//       clip-rule=\"evenodd\"\r\n//       stroke-linejoin=\"round\"\r\n//       stroke-miterlimit=\"1.41421\"\r\n//     >\r\n//       <g transform=\"matrix(1,0,0,1,-1901,-1971)\">\r\n//         <g transform=\"matrix(0.42107,0,0,0.42107,1325.03,1240.59)\">\r\n//           <path d=\"M1634.66,1738.09C1662.09,1728.87 1699.65,1766.87 1718.48,1822.9C1737.31,1878.93 1730.33,1931.9 1702.9,1941.12C1675.47,1950.34 1637.91,1912.34 1619.08,1856.31C1600.25,1800.28 1607.23,1747.31 1634.66,1738.09ZM1610.58,1742.86C1607.49,1747.05 1605.01,1751.69 1603.18,1756.44C1591.8,1786.02 1595.98,1817.52 1603.98,1846.98C1613.07,1880.47 1628.93,1913.78 1655.02,1936.74C1657.08,1938.56 1659.31,1940.32 1661.65,1941.99C1593.24,1936.83 1513.53,1908.32 1494.64,1870.37L1497.43,1868.05C1497.73,1867.75 1497.84,1867.69 1498.05,1867.31C1498.44,1866.61 1498.48,1865.72 1498.17,1864.99C1498,1864.59 1497.9,1864.52 1497.63,1864.19L1497.26,1863.88L1487.41,1856.95L1497.28,1849.9C1497.59,1849.64 1497.68,1849.59 1497.91,1849.25C1498.43,1848.5 1498.52,1847.48 1498.14,1846.65C1497.97,1846.29 1497.88,1846.22 1497.63,1845.91L1497.28,1845.62L1487.41,1838.57L1497.26,1831.64C1497.57,1831.38 1497.67,1831.33 1497.91,1830.99C1498.43,1830.24 1498.52,1829.22 1498.14,1828.39C1497.97,1828.02 1497.88,1827.95 1497.63,1827.64L1497.28,1827.34L1487.39,1820.28L1497.28,1813.21C1497.4,1813.11 1497.53,1813.01 1497.64,1812.9C1497.87,1812.67 1498.05,1812.39 1498.17,1812.1C1498.23,1811.95 1498.27,1811.8 1498.32,1811.64C1498.36,1811.32 1498.4,1811 1498.35,1810.69C1498.31,1810.37 1498.2,1810.06 1498.04,1809.78C1497.89,1809.5 1497.66,1809.27 1497.43,1809.05L1494.64,1806.73C1508.92,1778.04 1557.94,1754.75 1610.58,1742.86ZM1425.76,1867.16C1425.76,1882.95 1412.94,1895.77 1397.15,1895.77C1381.36,1895.77 1368.54,1882.95 1368.54,1867.16C1368.54,1851.37 1381.36,1838.55 1397.15,1838.55C1381.36,1838.55 1368.54,1825.73 1368.54,1809.94C1368.54,1794.15 1381.36,1781.33 1397.15,1781.33C1412.94,1781.33 1425.76,1794.15 1425.76,1809.94L1490.27,1809.94L1491.44,1810.91L1481.33,1818.14C1481.03,1818.4 1480.93,1818.45 1480.7,1818.78C1480.18,1819.53 1480.09,1820.55 1480.47,1821.38C1480.64,1821.75 1480.73,1821.81 1480.99,1822.12L1481.33,1822.42L1491.2,1829.47L1481.35,1836.4C1481.04,1836.66 1480.94,1836.71 1480.71,1837.04C1480.18,1837.79 1480.09,1838.82 1480.47,1839.65C1480.64,1840.02 1480.73,1840.08 1480.99,1840.39L1481.33,1840.69L1491.23,1847.76L1481.33,1854.82C1481.03,1855.08 1480.93,1855.13 1480.7,1855.47C1480.18,1856.22 1480.09,1857.25 1480.48,1858.08C1480.65,1858.45 1480.74,1858.51 1481,1858.82L1481.35,1859.11L1491.42,1866.2L1490.27,1867.16L1425.76,1867.16ZM1664.24,1812.13C1673.41,1809.05 1685.96,1821.75 1692.26,1840.48C1698.55,1859.2 1696.22,1876.91 1687.05,1879.99C1677.88,1883.07 1665.33,1870.37 1659.03,1851.64C1652.74,1832.92 1655.07,1815.21 1664.24,1812.13Z\" />\r\n//         </g>\r\n//       </g>\r\n//     </svg>\r\n//   ),\r\n//   Cereals: (\r\n//     <svg\r\n//       xmlns:x=\"http://ns.adobe.com/Extensibility/1.0/\"\r\n//       xmlns:i=\"http://ns.adobe.com/AdobeIllustrator/10.0/\"\r\n//       xmlns:graph=\"http://ns.adobe.com/Graphs/1.0/\"\r\n//       xmlns=\"http://www.w3.org/2000/svg\"\r\n//       xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n//       version=\"1.1\"\r\n//       x=\"0px\"\r\n//       y=\"0px\"\r\n//       viewBox=\"0 0 100 125\"\r\n//       style=\"enable-background:new 0 0 100 100;\"\r\n//       xml:space=\"preserve\"\r\n//     >\r\n//       <switch>\r\n//         <foreignObject\r\n//           requiredExtensions=\"http://ns.adobe.com/AdobeIllustrator/10.0/\"\r\n//           x=\"0\"\r\n//           y=\"0\"\r\n//           width=\"1\"\r\n//           height=\"1\"\r\n//         />\r\n//         <g i:extraneous=\"self\">\r\n//           <path d=\"M96.9,26.2c-1.8-1.2-5.7-3.2-9.7-2.6c-1.2,0.2-2.4,0.6-3.4,1.2l3.2-4.4c2.2-0.7,5.5-2,7.6-4.9c2.4-3.3,2.3-7.7,2.1-9.9    c-0.1-0.7-0.8-1.2-1.5-1.1c-2.1,0.5-6.3,1.8-8.7,5.2c-2,2.8-2.3,6.2-2.2,8.6l-3.1,4.3c0.1-1.1,0.2-2.2,0-3.3    c-0.7-4-3.9-7.1-5.6-8.4c-0.6-0.5-1.4-0.3-1.8,0.3c-1.1,1.9-3.1,5.8-2.4,9.8c0.6,3.7,3.3,6.5,5.1,8l-4.1,5.6    c0.1-1,0.1-2.1-0.1-3.1c-0.7-4-3.9-7.1-5.6-8.4c-0.6-0.5-1.4-0.3-1.8,0.3c-1.1,1.9-3.1,5.8-2.4,9.8c0.6,3.6,3.3,6.4,5,8l-4,5.5    c0.1-1,0.1-2-0.1-3c-0.7-4-3.9-7.1-5.6-8.4c-0.6-0.5-1.4-0.3-1.8,0.3c-1.1,1.9-3.1,5.8-2.4,9.8c0.6,3.6,3.2,6.4,5,7.9L50,65.3    l-8.8-12.1c1.8-1.5,4.3-4.3,5-7.9c0.7-4-1.2-8-2.4-9.8c-0.4-0.6-1.2-0.8-1.8-0.3c-1.7,1.4-4.9,4.4-5.6,8.4c-0.2,1-0.2,2-0.1,3    l-4-5.5c1.8-1.5,4.4-4.3,5-8c0.7-4-1.2-8-2.4-9.8c-0.4-0.6-1.2-0.8-1.8-0.3c-1.7,1.4-4.9,4.4-5.6,8.4c-0.2,1.1-0.2,2.1-0.1,3.1    L23.5,29c1.8-1.5,4.4-4.3,5.1-8c0.7-4-1.2-8-2.4-9.8c-0.4-0.6-1.2-0.8-1.8-0.3c-1.7,1.4-4.9,4.4-5.6,8.4c-0.2,1.1-0.2,2.2,0,3.3    l-3.1-4.3c0.1-2.3-0.2-5.8-2.2-8.6c-2.4-3.3-6.6-4.7-8.7-5.2C4.1,4.4,3.4,4.9,3.3,5.6c-0.2,2.2-0.3,6.5,2.1,9.9    c2,2.8,5.3,4.2,7.6,4.9l3.2,4.4c-1-0.5-2.2-1-3.4-1.2c-4-0.6-7.9,1.5-9.7,2.6c-0.6,0.4-0.7,1.3-0.3,1.8c1.4,1.7,4.5,4.7,8.6,5.3    c3.8,0.6,7.5-1.2,9.4-2.4l4.4,6.1c-1.1-0.6-2.3-1-3.6-1.2c-4-0.6-7.9,1.5-9.7,2.6c-0.6,0.4-0.7,1.3-0.3,1.8    c1.4,1.7,4.5,4.7,8.6,5.3c3.9,0.6,7.6-1.3,9.5-2.5l4.5,6.2c-1.1-0.6-2.4-1.1-3.7-1.3c-4-0.6-7.9,1.5-9.7,2.6    c-0.6,0.4-0.7,1.3-0.3,1.8c1.4,1.7,4.5,4.7,8.6,5.3c3.9,0.6,7.6-1.3,9.5-2.5l9.4,12.9L30,92.8c-0.5,0.7-0.4,1.8,0.4,2.3    c0.3,0.2,0.6,0.3,1,0.3c0.5,0,1-0.2,1.4-0.7L50,71l17.3,23.7c0.3,0.5,0.8,0.7,1.4,0.7c0.3,0,0.7-0.1,1-0.3    c0.8-0.5,0.9-1.6,0.4-2.3l-18-24.6l9.4-12.9c1.9,1.2,5.6,3.1,9.5,2.5c4-0.6,7.2-3.7,8.6-5.3c0.5-0.6,0.4-1.4-0.3-1.8    c-1.8-1.2-5.7-3.2-9.7-2.6c-1.4,0.2-2.6,0.7-3.7,1.3l4.5-6.2c1.9,1.2,5.6,3,9.5,2.5c4-0.6,7.2-3.7,8.6-5.3    c0.5-0.6,0.4-1.4-0.3-1.8c-1.8-1.2-5.7-3.2-9.7-2.6c-1.3,0.2-2.5,0.7-3.6,1.2l4.4-6.1c1.9,1.2,5.6,3,9.4,2.4    c4-0.6,7.2-3.7,8.6-5.3C97.7,27.5,97.6,26.6,96.9,26.2z\" />\r\n//         </g>\r\n//       </switch>\r\n//       <text\r\n//         x=\"0\"\r\n//         y=\"115\"\r\n//         fill=\"#000000\"\r\n//         font-size=\"5px\"\r\n//         font-weight=\"bold\"\r\n//         font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\r\n//       >\r\n//         Created by Alice Design\r\n//       </text>\r\n//       <text\r\n//         x=\"0\"\r\n//         y=\"120\"\r\n//         fill=\"#000000\"\r\n//         font-size=\"5px\"\r\n//         font-weight=\"bold\"\r\n//         font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\r\n//       >\r\n//         from the Noun Project\r\n//       </text>\r\n//     </svg>\r\n//   ),\r\n//   DeathRate: (\r\n//     <svg\r\n//       xmlns=\"http://www.w3.org/2000/svg\"\r\n//       xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n//       viewBox=\"0 0 70 105\"\r\n//       version=\"1.1\"\r\n//       x=\"0px\"\r\n//       y=\"0px\"\r\n//     >\r\n//       <title>Skull</title>\r\n//       <desc>Created with Sketch.</desc>\r\n//       <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n//         <path\r\n//           d=\"M35,65.6786407 C34.7224691,65.6805231 34.3542653,65.8066113 34.125,66.375 C33.6435583,67.1934822 32.875,67 32.875,67 C32.875,67 31.6127028,66.805771 31,65.125 C30.5878379,63.7059002 32.0957324,61.6727657 34.125,58.25 C34.7719215,57.2365943 35.2082447,56.9725052 35.5,57.133659 C35.7917553,56.9725052 36.2280785,57.2365943 36.875,58.25 C38.9042676,61.6727657 40.4121621,63.7059002 40,65.125 C39.3872972,66.805771 38.125,67 38.125,67 C38.125,67 37.3564417,67.1934822 36.875,66.375 C36.6457347,65.8066113 36.2775309,65.6805231 36,65.6786407 L36,65.75 L35.5,65.75 L35,65.75 L35,65.6786407 L35,65.6786407 Z M35,83.9486831 C35.121405,83.9809031 35.1863472,84 35.1863472,84 C35.1863472,84 35.1992593,83.9631633 35.2242941,83.8910329 C35.9192111,83.717687 37.4287345,83.3863428 39.2302545,83.2651708 C40.7155677,83.1652671 42.462019,83.4645054 44.0026775,82.8122029 C44.9668265,82.40399 46.3361321,80.5761839 47.1763723,80.2502487 C49.0225257,79.5341125 49.9174011,80.1545752 49.9174011,78.2052614 C49.9174011,76.6900041 49.3641233,75.210567 49.3641233,75.210567 L47.1763723,72.1807229 C47.1763723,72.1807229 49.143974,67.86957 52.1496634,67.86957 C55.1553528,67.86957 55.3032779,69.1561844 55.3032779,69.1561844 C55.3032779,69.1561844 61.9642551,68.5798607 63.9880168,64.6759147 C66.0117785,60.7719686 67.1687396,60.4509782 67.1687396,60.4509782 C67.1687396,60.4509782 68.4712831,59.2907041 66.6891546,57.4838068 C64.9070261,55.6769095 65.2276419,50.6372278 66.6369458,47.5742235 C68.0462497,44.5112192 68.7674679,45.0679783 69.2329967,40.9435172 C69.6985254,36.819056 70.8159953,27.3468553 68.9923675,23.7048745 C67.4012164,20.5271748 61.3934082,4.84838947 41.8952073,0.902556763 C40.6426093,0.313627964 39.1985599,0 37.5434422,0 C36.6758098,0 35.8281454,0.0205846161 35,0.0605548352 C34.1718546,0.0205846161 33.3241902,0 32.4565578,0 C30.80144,0 29.3573906,0.313627984 28.1047951,0.90255627 C8.60659227,4.84838816 2.59878369,20.5271746 1.00763252,23.7048745 C-0.815995316,27.3468553 0.301474556,36.819056 0.767003335,40.9435172 C1.23253211,45.0679783 1.95375032,44.5112192 3.36305419,47.5742235 C4.77235806,50.6372278 5.09297386,55.6769095 3.31084535,57.4838068 C1.52871685,59.2907041 2.83126035,60.4509782 2.83126035,60.4509782 C2.83126035,60.4509782 3.98822152,60.7719686 6.01198322,64.6759147 C8.03574492,68.5798607 14.6967221,69.1561844 14.6967221,69.1561844 C14.6967221,69.1561844 14.8446472,67.86957 17.8503366,67.86957 C20.856026,67.86957 22.8236277,72.1807229 22.8236277,72.1807229 L20.6358767,75.210567 C20.6358767,75.210567 20.0825989,76.6900041 20.0825989,78.2052614 C20.0825989,80.1545752 20.9774743,79.5341125 22.8236277,80.2502487 C23.6638679,80.5761839 25.0331735,82.40399 25.9973225,82.8122029 C27.537981,83.4645054 29.2844323,83.1652671 30.7697455,83.2651708 C32.5712655,83.3863428 34.0807889,83.717687 34.7757059,83.8910329 C34.8007407,83.9631633 34.8136528,84 34.8136528,84 C34.8136528,84 34.878595,83.9809031 35,83.9486831 L35,83.9486831 Z M30.9794447,47.9451433 C30.9794447,47.9451433 31.2649385,45.5162933 29.7079657,43.896244 C28.1509929,42.2761948 26.6583659,41 24.8955191,41 C23.1326723,41 13,41.4935055 13,48.513719 C13,55.5339326 13.5836617,56.1145849 17.9039281,56.7947869 C22.2241945,57.4749889 25.2944304,56.4594186 28.5130192,53.8198823 C31.7316079,51.1803459 30.891863,48.4626386 30.891863,48.4626386 L30.9794447,47.9451433 L30.9794447,47.9451433 Z M39.0205553,47.9451433 C39.0205553,47.9451433 38.7350615,45.5162933 40.2920343,43.896244 C41.8490071,42.2761948 43.3416341,41 45.1044809,41 C46.8673277,41 57,41.4935055 57,48.513719 C57,55.5339326 56.4163383,56.1145849 52.0960719,56.7947869 C47.7758055,57.4749889 44.7055696,56.4594186 41.4869808,53.8198823 C38.2683921,51.1803459 39.108137,48.4626386 39.108137,48.4626386 L39.0205553,47.9451433 L39.0205553,47.9451433 Z\"\r\n//           fill=\"#000000\"\r\n//         />\r\n//       </g>\r\n//       <text\r\n//         x=\"0\"\r\n//         y=\"99\"\r\n//         fill=\"#000000\"\r\n//         font-size=\"5px\"\r\n//         font-weight=\"bold\"\r\n//         font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\r\n//       >\r\n//         Created by Vitalii Pylypets\r\n//       </text>\r\n//       <text\r\n//         x=\"0\"\r\n//         y=\"104\"\r\n//         fill=\"#000000\"\r\n//         font-size=\"5px\"\r\n//         font-weight=\"bold\"\r\n//         font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\r\n//       >\r\n//         from the Noun Project\r\n//       </text>\r\n//     </svg>\r\n//   ),\r\n//   Egg: (\r\n//     <svg\r\n//       xmlns=\"http://www.w3.org/2000/svg\"\r\n//       xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n//       version=\"1.1\"\r\n//       x=\"0px\"\r\n//       y=\"0px\"\r\n//       viewBox=\"0 0 1024 1280\"\r\n//       style=\"enable-background:new 0 0 1024 1024;\"\r\n//       xml:space=\"preserve\"\r\n//     >\r\n//       <path d=\"M817,316.3c-37-76.8-90.9-149.5-163.3-196.2c-32.1-20.7-68.5-35.9-106.4-41.5c-38.7-5.6-78-2-115,10.9  c-79.1,27.7-141.4,89.8-186.8,158.5c-50.2,75.9-83.1,164.6-95.9,254.6c-12.4,87-7.3,178.4,31.1,258.6  c32.1,67,88.1,120.3,155.7,150.8c71.3,32.1,152.3,41.8,229.7,32.7c75.5-8.8,148.6-36.3,205.6-87.6c58.7-52.9,93.1-127.2,103.9-204.8  c3.2-22.6,4.8-45.2,4.8-68v0c0,0,0,0,0,0C880.3,491.8,857,399.5,817,316.3z M511.9,244.7c-3.3,0-6.6,0.1-9.9,0.4  c-0.5,0-2.5,0.3-3.5,0.4c-0.1,0-0.1,0-0.2,0c-0.5,0.1-1,0.2-1.3,0.2c-6.3,1.1-12.5,2.7-18.6,4.7c-2.7,0.9-5.3,1.9-7.9,2.9  c-0.6,0.3-1.2,0.5-1.8,0.8c-1.4,0.6-2.7,1.3-4.1,2c-5.8,2.9-11.5,6.2-16.9,9.8c-2.6,1.7-5.2,3.5-7.8,5.4c-0.3,0.2-0.5,0.4-0.8,0.6  c-0.9,1-2.2,1.8-3.2,2.6c-4.9,4-9.7,8.3-14.2,12.8c-4.7,4.6-9.2,9.4-13.6,14.4c-2.2,2.5-4.3,5-6.3,7.5c-1,1.3-2.1,2.6-3.1,3.9  c0,0.1-0.1,0.1-0.2,0.2c0,0,0,0,0,0.1c-0.1,0.2-0.3,0.4-0.5,0.7c-17.4,23.1-31.7,48.5-43.3,74.9c-0.5,1.1-1,2.2-1.5,3.4  c-0.1,0.2-0.2,0.5-0.3,0.8c0,0,0,0,0,0c0,0.1,0,0.1-0.1,0.2c0,0,0,0,0,0c0,0,0,0.1,0,0.1c0,0,0,0,0,0.1c0,0,0,0.1-0.1,0.2  c-0.1,0.2-0.2,0.4-0.3,0.7c-0.3,0.8-0.7,1.7-0.8,2c-1.4,3.4-2.8,6.9-4.1,10.4c-2.7,7.2-5.3,14.6-7.7,21.9  c-4.7,14.6-8.7,29.5-12,44.5c-1.7,7.7-3.1,15.4-4.4,23.1c-0.3,2-0.6,4-1,6c-0.2,1.5-0.2,4.6-0.8,6c0,0,0,0,0,0  c-0.1,0.5-0.1,1-0.2,1.5c-0.2,1.8-0.4,3.5-0.6,5.3c-1.7,15.4-2.6,30.8-2.6,46.3c0,11.2-9.1,19.5-20,20c-10.8,0.5-20-9.5-20-20  c0.1-37.4,5-75,14-111.3c15.1-61.6,42-121.6,82.6-170.7c34-41.1,82-74.4,137.1-74.7c11.2,0,19.5,9.2,20,20  C532.4,235.5,522.4,244.6,511.9,244.7z\" />\r\n//       <text\r\n//         x=\"0\"\r\n//         y=\"1039\"\r\n//         fill=\"#000000\"\r\n//         font-size=\"5px\"\r\n//         font-weight=\"bold\"\r\n//         font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\r\n//       >\r\n//         Created by shashank singh\r\n//       </text>\r\n//       <text\r\n//         x=\"0\"\r\n//         y=\"1044\"\r\n//         fill=\"#000000\"\r\n//         font-size=\"5px\"\r\n//         font-weight=\"bold\"\r\n//         font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\r\n//       >\r\n//         from the Noun Project\r\n//       </text>\r\n//     </svg>\r\n//   ),\r\n//   FishSeafood: (\r\n//     <svg\r\n//       xmlns:x=\"http://ns.adobe.com/Extensibility/1.0/\"\r\n//       xmlns:i=\"http://ns.adobe.com/AdobeIllustrator/10.0/\"\r\n//       xmlns:graph=\"http://ns.adobe.com/Graphs/1.0/\"\r\n//       xmlns=\"http://www.w3.org/2000/svg\"\r\n//       xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n//       version=\"1.1\"\r\n//       x=\"0px\"\r\n//       y=\"0px\"\r\n//       viewBox=\"0 0 512 640\"\r\n//       style=\"enable-background:new 0 0 512 512;\"\r\n//       xml:space=\"preserve\"\r\n//     >\r\n//       <switch>\r\n//         <foreignObject\r\n//           requiredExtensions=\"http://ns.adobe.com/AdobeIllustrator/10.0/\"\r\n//           x=\"0\"\r\n//           y=\"0\"\r\n//           width=\"1\"\r\n//           height=\"1\"\r\n//         />\r\n//         <g i:extraneous=\"self\">\r\n//           <g>\r\n//             <path d=\"M482.5,188.6c-22.9-23.6-51.2-42.1-81.8-53.6c-4.5-1.7-9.5,0-12,4.1c-21.7,35.1-33.1,75.5-33.1,116.9     c0,41.4,11.5,81.8,33.1,116.9c1.9,3,5.1,4.7,8.5,4.7c1.2,0,2.4-0.2,3.5-0.6c30.6-11.5,58.9-30.1,81.8-53.6     c17.7-18.2,27.4-42.1,27.4-67.4S500.2,206.8,482.5,188.6z M442,272c-8.8,0-16-7.2-16-16c0-8.8,7.2-16,16-16c8.8,0,16,7.2,16,16     C458,264.8,450.9,272,442,272z\" />\r\n//             <path d=\"M330.5,256c0-46,12.7-91,36.9-130c0.1-0.2,0.2-0.4,0.4-0.6c-15-3.1-30.3-4.7-46-4.7c-43.8,0-86.3,12.6-122.7,36.6     c-35.5,23.3-63.7,56-81.3,94.6c-1.2,2.6-1.2,5.7,0,8.3c17.6,38.6,45.7,71.3,81.3,94.6c36.5,23.9,78.9,36.6,122.7,36.6     c15.7,0,31-1.6,46-4.7c-0.1-0.2-0.3-0.4-0.4-0.6C343.2,347,330.5,302,330.5,256z\" />\r\n//             <path d=\"M213,120.6c33.7-16.4,70.7-24.9,108.7-24.9c15.3,0,30.5,1.4,45.5,4.1C357,80.3,337.1,68.3,315,68.3h-71.1     c-12.3,0-23.5,6.2-30,16.7s-7.1,23.3-1.6,34.3L213,120.6z\" />\r\n//             <path d=\"M213,391.4l-0.7,1.3c-5.5,11-4.9,23.8,1.6,34.3s17.7,16.7,30,16.7H315c22.1,0,41.9-12.1,52.1-31.6     c-14.9,2.7-30.2,4.1-45.5,4.1C283.8,416.3,246.7,407.7,213,391.4z\" />\r\n//             <path d=\"M111.6,210.9c-13.1-17.5-28.7-33.1-46.3-46.2c-18.4-13.7-38.7-8.2-50.7,3.2c-12,11.5-18.3,31.6-5.4,50.7     c8,11.9,15.2,24.4,21.4,37.4c-6.2,12.9-13.3,25.5-21.4,37.4c-12.9,19.1-6.6,39.2,5.4,50.7c7,6.7,16.8,11.3,27.4,11.3     c7.6,0,15.6-2.4,23.3-8.1c17.7-13.1,33.3-28.7,46.3-46.2c-6.2-9.7-11.8-19.9-16.6-30.5c-4.2-9.2-4.2-19.9,0-29.1     C99.8,230.9,105.4,220.7,111.6,210.9z\" />\r\n//           </g>\r\n//         </g>\r\n//       </switch>\r\n//       <text\r\n//         x=\"0\"\r\n//         y=\"527\"\r\n//         fill=\"#000000\"\r\n//         font-size=\"5px\"\r\n//         font-weight=\"bold\"\r\n//         font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\r\n//       >\r\n//         Created by iconfield\r\n//       </text>\r\n//       <text\r\n//         x=\"0\"\r\n//         y=\"532\"\r\n//         fill=\"#000000\"\r\n//         font-size=\"5px\"\r\n//         font-weight=\"bold\"\r\n//         font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\r\n//       >\r\n//         from the Noun Project\r\n//       </text>\r\n//     </svg>\r\n//   ),\r\n//   Fruits: (\r\n//     <svg\r\n//       xmlns=\"http://www.w3.org/2000/svg\"\r\n//       xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n//       version=\"1.1\"\r\n//       x=\"0px\"\r\n//       y=\"0px\"\r\n//       viewBox=\"0 0 90 112.5\"\r\n//       enable-background=\"new 0 0 90 90\"\r\n//       xml:space=\"preserve\"\r\n//     >\r\n//       <path d=\"M16.8,44.5c0,1.7,0.3,3.4,0.8,5c0.6,2.4,2,4.9,3.8,8c2.2,3.8,4.9,8.5,6.8,14.4c0.8,2.6,1.9,4.6,3.1,6c1.8,2,4,3.1,6.6,3.1  c2.7,0,5.3-1.1,7.1-3c1.8,1.9,4.3,3,7.1,3c2.6,0,4.8-1,6.6-3.1c1.3-1.5,2.3-3.4,3.1-6c1.9-6,4.6-10.6,6.8-14.4  c1.8-3.1,3.3-5.6,3.8-8c0.5-1.6,0.8-3.3,0.8-5c0-8.6-7-15.6-15.6-15.6c-3.7,0-7.3,1.3-10,3.6c0.2-3.3,0.5-6.5,0.8-9.5  c0.1-1.3-0.8-2.4-2.1-2.6c-1.3-0.1-2.4,0.8-2.6,2.1c-0.2,1.6-0.3,3.3-0.5,5l-3.8-3.1c0.5-1.3,0.7-2.8,0.4-4.5  c-0.3-2.3-1.4-4.5-2.9-6c-6-6-14.2-4.9-14.5-4.8c-1,0.2-1.8,1-2,2c0,0.3-1.2,8.5,4.9,14.5c1.8,1.8,4.7,3,7.5,3  c1.2,0,2.4-0.2,3.5-0.7l3.4,2.9c-2.2-1.2-4.7-1.8-7.3-1.8C23.8,28.9,16.8,35.9,16.8,44.5z\" />\r\n//       <text\r\n//         x=\"0\"\r\n//         y=\"105\"\r\n//         fill=\"#000000\"\r\n//         font-size=\"5px\"\r\n//         font-weight=\"bold\"\r\n//         font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\r\n//       >\r\n//         Created by ignation\r\n//       </text>\r\n//       <text\r\n//         x=\"0\"\r\n//         y=\"110\"\r\n//         fill=\"#000000\"\r\n//         font-size=\"5px\"\r\n//         font-weight=\"bold\"\r\n//         font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\r\n//       >\r\n//         from the Noun Project\r\n//       </text>\r\n//     </svg>\r\n//   ),\r\n//   Milk: (\r\n//     <svg\r\n//       xmlns=\"http://www.w3.org/2000/svg\"\r\n//       xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n//       version=\"1.1\"\r\n//       x=\"0px\"\r\n//       y=\"0px\"\r\n//       viewBox=\"0 0 100 125\"\r\n//       style=\"enable-background:new 0 0 100 100;\"\r\n//       xml:space=\"preserve\"\r\n//     >\r\n//       <g>\r\n//         <path d=\"M41.1,47.1L41.1,47.1L41,47.3c0.7-0.9,1.4-1.6,2.4-2.3c-0.8-0.7-2.1-1.4-3.1-1.3c-0.3,0.1-0.5,0.1-0.8,0.1   C39.7,45.4,40.3,47.1,41.1,47.1z\" />\r\n//         <path d=\"M62,58.6l-0.4-4c-0.4-3.8-2.6-6.9-5.8-8.6c-2.7,0.1-3.5,4.2-3.5,4.2s0.1,2.9-3.5,1.8c-2.4-0.8-3.8-3.4-4.4-4.9   c-2,1.6-3.6,4.1-4,7l-1,4.3c2.9-2.2,6.9-3.5,11.1-3.5C55.1,54.8,59.2,56.3,62,58.6z M56.9,51.1c0.7-0.1,1.4,0.5,1.5,1.3   c0.1,0.8-0.5,1.4-1.3,1.5c-0.9,0.1-1.6-0.5-1.5-1.3C55.5,51.9,56.2,51.2,56.9,51.1z M44.6,53.9c-0.8,0.1-1.4-0.6-1.5-1.3   c-0.1-0.8,0.5-1.4,1.3-1.5c0.8-0.1,1.5,0.5,1.5,1.3C46,53.2,45.4,53.8,44.6,53.9z\" />\r\n//         <path d=\"M62,43.9c-0.1-0.1-0.5-0.1-0.8-0.1c-0.9-0.1-2,0.5-3,0.9c0.9,0.7,1.8,1.5,2.5,2.3C61.4,46.6,61.8,45.2,62,43.9z\" />\r\n//         <path d=\"M50.8,57.3c-4.1,0-7.9,1.4-10.4,3.7c-0.3,0.2-0.4,0.4-0.7,0.7c-1.6,1.6-2.3,3.5-2.3,5.5c0,5.4,6,9.8,13.4,9.8   c7.4,0,13.4-4.5,13.5-9.8c0-1.2-0.3-2.3-0.8-3.4c-0.2-0.3-0.3-0.6-0.6-0.9C60.6,59.4,55.9,57.3,50.8,57.3z M45.5,69.2   c-2.3,0-4.1-1.9-4.1-4.1c0-2.3,1.9-4.1,4.1-4.1s4.1,1.9,4.1,4.1C49.6,67.5,47.7,69.2,45.5,69.2z M56,69.2c-2.3,0-4.1-1.9-4.1-4.1   c0-2.3,1.9-4.1,4.1-4.1c2.2,0,3.9,1.9,4.1,4.1C60.1,67.5,58.2,69.2,56,69.2z\" />\r\n//         <path d=\"M73.8,36.7c-0.4-1.1-0.9-2.1-1.6-3c0,0,0,0,0,0l-6.7-9.1v-4.9c1.3-0.8,2.1-2.2,2.1-3.9v-4.3c0-2.5-2-4.6-4.6-4.6H36.9   c-2.5,0-4.6,2-4.6,4.6v4.3c0,1.6,0.8,3,2.1,3.8v4.9l-6.7,9.1c-0.7,0.9-1.2,1.9-1.6,3c-0.5,1.4-0.8,3-0.8,4.5v38.9   c0,1.6,0.3,3.1,0.8,4.5C28,89.5,32.7,93,38.3,93h23.5c5.5,0,10.2-3.5,12.1-8.3c0.5-1.4,0.8-3,0.8-4.5V41.2   C74.6,39.7,74.4,38.1,73.8,36.7z M62.7,12v3H37.3v-3H62.7z M31.8,36.7l7.1-9.7c0.3-0.4,0.5-1,0.5-1.5V20h21.1v5.5   c0,0.5,0.2,1,0.5,1.5l7.1,9.7c0,0,0,0,0,0.1L31.8,36.7C31.8,36.7,31.8,36.7,31.8,36.7z M37,44.2l-0.1-1c0-0.7,0.5-1.2,1.3-1.3   c0.3-0.1,1-0.2,1.7-0.3c2.2-0.5,4.6,1.3,5.6,2.2c1.3-0.5,2.7-1,4.1-1.2c2.3-0.3,4.5,0.2,6.4,1c1-0.9,3.3-2.4,5.4-2.1   c0.8,0.1,1.4,0.2,1.7,0.3c0.9,0.2,1.3,0.6,1.3,1.3l-0.1,1h-0.1c-0.1,1.4-0.7,3.8-2.2,4.8c1,1.6,1.6,3.5,1.8,5.5l0.7,7.1   c1.2,1.7,1.7,3.5,1.5,5.6c0,6.8-7,12.2-15.6,12.2c-8.6,0-15.7-5.5-15.7-12.2c0-1.9,0.6-3.7,1.6-5.3l1.6-8.1   c0.2-1.6,0.8-3.1,1.5-4.5C37.8,48.4,37.1,45.7,37,44.2z M61.8,88H38.3c-2.7,0-5-1.3-6.4-3.3h36.4C66.8,86.7,64.4,88,61.8,88z\" />\r\n//       </g>\r\n//       <text\r\n//         x=\"0\"\r\n//         y=\"115\"\r\n//         fill=\"#000000\"\r\n//         font-size=\"5px\"\r\n//         font-weight=\"bold\"\r\n//         font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\r\n//       >\r\n//         Created by achmad mulyana\r\n//       </text>\r\n//       <text\r\n//         x=\"0\"\r\n//         y=\"120\"\r\n//         fill=\"#000000\"\r\n//         font-size=\"5px\"\r\n//         font-weight=\"bold\"\r\n//         font-family=\"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\r\n//       >\r\n//         from the Noun Project\r\n//       </text>\r\n//     </svg>\r\n//   ),\r\n// };\r\n\r\nimport DeathRate from \"./deathrate.svg\";\r\nimport Obesity from \"./obesity.svg\";\r\nimport Undernourished from \"./undernourished.svg\";\r\nimport Alcohol from \"./alcohol.svg\";\r\nimport Animal from \"./animal.svg\";\r\nimport Vegetables from \"./vegetables.svg\";\r\nimport Fruits from \"./fruits.svg\";\r\nimport Nuts from \"./nuts.svg\";\r\nimport FishSeafood from \"./fishseafood.svg\";\r\nimport Cereals from \"./cereals.svg\";\r\nimport Milk from \"./milk.svg\";\r\nimport StarchyRoots from \"./starchyroots.svg\";\r\nimport Sugar from \"./sugar.svg\";\r\nimport Eggs from \"./eggs.svg\";\r\nimport Oil from \"./oil.svg\";\r\n\r\nexport const icons = {\r\n  DeathRate: DeathRate,\r\n  Obesity: Obesity,\r\n  Undernourished: Undernourished,\r\n  Alcohol: Alcohol,\r\n  Animal: Animal,\r\n  Vegetables: Vegetables,\r\n  Fruits: Fruits,\r\n  Nuts: Nuts,\r\n  FishSeafood: FishSeafood,\r\n  Cereals: Cereals,\r\n  Milk: Milk,\r\n  StarchyRoots: StarchyRoots,\r\n  Sugar: Sugar,\r\n  Eggs: Eggs,\r\n  Oil: Oil,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/deathrate.97dbe550.svg\";","export default __webpack_public_path__ + \"static/media/obesity.473b47da.svg\";","export default __webpack_public_path__ + \"static/media/undernourished.c384e837.svg\";","export default __webpack_public_path__ + \"static/media/alcohol.b7608ed6.svg\";","export default __webpack_public_path__ + \"static/media/animal.1a088f8a.svg\";","export default __webpack_public_path__ + \"static/media/vegetables.a1d94812.svg\";","export default __webpack_public_path__ + \"static/media/fruits.56f22762.svg\";","export default __webpack_public_path__ + \"static/media/nuts.f6c92203.svg\";","export default __webpack_public_path__ + \"static/media/fishseafood.63a25fef.svg\";","export default __webpack_public_path__ + \"static/media/cereals.21bc2969.svg\";","export default __webpack_public_path__ + \"static/media/milk.bb966efe.svg\";","export default __webpack_public_path__ + \"static/media/starchyroots.e4fdbb72.svg\";","export default __webpack_public_path__ + \"static/media/sugar.c800f831.svg\";","export default __webpack_public_path__ + \"static/media/eggs.306107e4.svg\";","export default __webpack_public_path__ + \"static/media/oil.4e1f7cf4.svg\";","import * as d3 from \"d3\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { DataEntry } from \"../../data\";\r\nimport { icons } from \"../../icons/icons\";\r\nimport { translateFactor } from \"../../utils/translate_factor\";\r\n\r\nexport const ParCoord = (props: {\r\n  data: DataEntry[];\r\n  onFactorChanged: (factor?: string) => void;\r\n  factor?: string;\r\n  countryColor: any;\r\n}) => {\r\n  const dimensions = [\r\n    \"DeathRate\",\r\n    \"Obesity\",\r\n    \"Undernourished\",\r\n    \"Alcohol\",\r\n    \"Animal\",\r\n    \"Vegetables\",\r\n    \"Fruits\",\r\n    \"Nuts\",\r\n    \"FishSeafood\",\r\n    \"Cereals\",\r\n    \"Milk\",\r\n    \"StarchyRoots\",\r\n    \"Sugar\",\r\n    \"Eggs\",\r\n    \"Oil\",\r\n  ];\r\n\r\n  const ref = useRef(null);\r\n\r\n  const height = 350;\r\n\r\n  const width = 500;\r\n\r\n  useEffect(() => {\r\n    const y: any = {};\r\n    for (let i in dimensions) {\r\n      const name = dimensions[i];\r\n      const extent = d3.extent(props.data, function (d) {\r\n        return (d as any)[name];\r\n      }) as [number, number];\r\n      extent[0] = Math.min(extent[0], 0);\r\n      extent[1] = Math.max(5, Math.ceil(extent[1] / 5) * 5);\r\n      y[name] = d3.scaleLinear().domain(extent).range([height, 0]);\r\n    }\r\n\r\n    const svg = d3\r\n      .select(ref.current)\r\n      .append(\"svg\")\r\n      .attr(\"preserveAspectRatio\", \"xMidYMid\")\r\n      .attr(\"viewBox\", \"0 -50 \" + (width + 0) + \" \" + (height + 60));\r\n    //   .attr(\"width\", width + margin.left + margin.right)\r\n    //   .attr(\"height\", height + margin.top + margin.bottom)\r\n    const g = svg.append(\"g\");\r\n    //   .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    const x = d3.scalePoint().range([0, width]).padding(1).domain(dimensions);\r\n    function path(d: any) {\r\n      return d3.line()(\r\n        dimensions.map(function (p) {\r\n          return [x(p), y[p](d[p])];\r\n        }) as [number, number][]\r\n      );\r\n    }\r\n    const tooltip = d3\r\n      .select(ref.current)\r\n      .append(\"div\")\r\n      .attr(\"class\", \"tooltip\");\r\n\r\n    const ga = g\r\n      .selectAll(\"myAxis\")\r\n      // For each dimension of the dataset I add a 'g' element:\r\n      .data(dimensions)\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + x(d) + \")\";\r\n      });\r\n\r\n    ga.append(\"rect\")\r\n      .attr(\"width\", (d) => 30)\r\n      .attr(\"transform\", \"translate(-22, -30)\")\r\n      .attr(\"height\", height + 38)\r\n      .attr(\"stroke\", (d) => \"blue\")\r\n      .attr(\"stroke-width\", \"2px\")\r\n      .attr(\"rx\", 5)\r\n      .attr(\"opacity\", (d) => (d === props.factor ? 1 : 0))\r\n      .attr(\"id\", (d) => d);\r\n\r\n    ga.each(function (d) {\r\n      d3.select(this).call(d3.axisLeft(y[d]));\r\n    })\r\n      .append(\"image\")\r\n      .attr(\"href\", (d: any) => (icons as any)[d])\r\n      .attr(\"height\", 30)\r\n      .attr(\"width\", 30)\r\n      .attr(\"transform\", function (d: any) {\r\n        return \"translate(-20, -30)\";\r\n      })\r\n      .on(\"click\", factor_clicked)\r\n      .on(\"mouseover\", (event, d) => {\r\n        tooltip\r\n          .html(translateFactor[d])\r\n          .style(\"top\", d3.pointer(event, svg)[1] - 27 + \"px\")\r\n          .style(\"left\", d3.pointer(event, svg)[0] - 80 + \"px\")\r\n          .raise()\r\n          .style(\"display\", \"block\");\r\n      })\r\n      .on(\"mouseout\", (event, d) => {\r\n        tooltip?.html(null).lower().style(\"display\", \"none\");\r\n      });\r\n\r\n    g.selectAll(\"myPath\")\r\n      .data(props.data)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"d\", path)\r\n      .style(\"fill\", \"none\")\r\n      .style(\"stroke\", (d) => props.countryColor(d.Country))\r\n      .style(\"stroke-width\", 3)\r\n      .style(\"opacity\", 1);\r\n\r\n    function factor_clicked(event: any, d: any) {\r\n      const factor = props.factor;\r\n      console.log(\"clicked \" + d + \" with \" + factor);\r\n      if (factor !== d) {\r\n        d3.select(\"#\" + factor)\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\"opacity\", 0);\r\n        d3.select(\"#\" + d)\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\"opacity\", 1);\r\n        props.onFactorChanged(d);\r\n      } else {\r\n        d3.select(\"#\" + d)\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\"opacity\", 0);\r\n        props.onFactorChanged(undefined);\r\n      }\r\n    }\r\n\r\n    return function () {\r\n      svg.remove();\r\n      tooltip.remove();\r\n    };\r\n  }, [props.data, props.factor]);\r\n\r\n  return <div ref={ref} />;\r\n};\r\n","import { Button, Dropdown, Menu, Select } from \"antd\";\r\nimport * as d3 from \"d3\";\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DataEntry } from \"../../data\";\r\nimport { DownOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { DonutChart } from \"../donut_chart/donut_chart\";\r\nimport { groupBy } from \"../../utils/groupBy\";\r\nimport \"./side_panel.scss\";\r\nimport { Typography, Space } from \"antd\";\r\nimport { ParCoord } from \"../par_coord/par_coord\";\r\nimport { icons } from \"../../icons/icons\";\r\n\r\nconst { Text, Link } = Typography;\r\nconst { Option } = Select;\r\n\r\nexport const foodTypeColor = d3\r\n  .scaleOrdinal()\r\n  .domain([\r\n    \"Alcohol\",\r\n    \"Animal\",\r\n    \"Vegetables\",\r\n    \"Fruits\",\r\n    \"Nuts\",\r\n    \"FishSeafood\",\r\n    \"Cereals\",\r\n    \"Milk\",\r\n    \"StarchyRoots\",\r\n    \"Sugar\",\r\n    \"Eggs\",\r\n    \"Oil\",\r\n    \"Others\",\r\n  ])\r\n  .range(d3.schemeDark2);\r\n\r\nexport const SidePanel = (props: {\r\n  data: DataEntry[];\r\n  onFactorChanged: (factor?: string) => void;\r\n  factor?: string;\r\n}) => {\r\n  // const [category, setCategory] = useState<Category>(\"victim\");\r\n\r\n  // const [measure, setMeasure] = useState<Measure>(\"casualties\");\r\n\r\n  // const data = props.data;\r\n\r\n  const chartData = useMemo(() => {\r\n    const data = props.data[0];\r\n    return {\r\n      Alcohol: data.Alcohol,\r\n      Animal: data.Animal,\r\n      Vegetables: data.Vegetables,\r\n      Fruits: data.Fruits,\r\n      Nuts: data.Nuts,\r\n      FishSeafood: data.FishSeafood,\r\n      Cereals: data.Cereals,\r\n      Milk: data.Milk,\r\n      StarchyRoots: data.StarchyRoots,\r\n      Sugar: data.Sugar,\r\n      Eggs: data.Eggs,\r\n      Oil: data.Oil,\r\n      Others:\r\n        1 -\r\n        data.Alcohol -\r\n        data.Animal -\r\n        data.Vegetables -\r\n        data.Fruits -\r\n        data.Nuts -\r\n        data.FishSeafood -\r\n        data.Cereals -\r\n        data.Milk -\r\n        data.StarchyRoots -\r\n        data.Sugar -\r\n        data.Eggs -\r\n        data.Oil,\r\n    };\r\n  }, [props.data]);\r\n\r\n  const countryColor = d3\r\n    .scaleOrdinal()\r\n    .domain(props.data.map((datum) => datum.Country))\r\n    .range(d3.schemeAccent);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        // margin: \"0 auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n        // flexFlow: \"row\",\r\n        width: \"100%\",\r\n        // justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div style={{ height: \"50%\", margin: 0 }}>\r\n        <Text className=\"subtitle\">\r\n          Showing {props.data.map((datum) => datum.Country).join(\", \")}\r\n        </Text>\r\n        {props.data.length == 1 ? (\r\n          <div>\r\n            Food composition (kg)\r\n            {/* <table style={{ marginTop: \"20px\" }}>\r\n          <tr>\r\n          <td>Category: </td>\r\n            <td>\r\n            <Select\r\n            defaultValue=\"victim\"\r\n            style={{ width: \"100%\" }}\r\n            onChange={setCategory}\r\n            size=\"small\"\r\n            >\r\n            <Option value=\"victim\">By Victim Type</Option>\r\n            <Option value=\"attack\">By Attack Type</Option>\r\n            </Select>\r\n            </td>\r\n            </tr>\r\n            <tr>\r\n            <td>Measure: </td>\r\n            <td>\r\n            <Select\r\n            defaultValue=\"casualties\"\r\n            style={{ width: \"100%\" }}\r\n            onChange={setMeasure}\r\n            size=\"small\"\r\n            >\r\n            <Option value=\"casualties\">By Casualties</Option>\r\n            <Option value=\"cases\">By Case Count</Option>\r\n            </Select>\r\n            </td>\r\n            </tr>\r\n          </table> */}\r\n            <div style={{ flexGrow: 1 }}>\r\n              <DonutChart data={chartData}></DonutChart>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            Comparison\r\n            <table style={{ marginTop: \"20px\" }}>\r\n              {props.data.map((datum) => (\r\n                <tr>\r\n                  <td>\r\n                    <div\r\n                      style={{\r\n                        height: \"20px\",\r\n                        width: \"20px\",\r\n                        marginRight: \"10px\",\r\n                        backgroundColor: countryColor(datum.Country) as string,\r\n                      }}\r\n                    />\r\n                  </td>\r\n                  <td>{datum.Country} </td>\r\n                </tr>\r\n              ))}\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div style={{ height: \"50%\", marginTop: \"auto\" }}>\r\n        <Text className=\"subtitle\">Details</Text>\r\n        <ParCoord\r\n          data={props.data}\r\n          onFactorChanged={props.onFactorChanged}\r\n          factor={props.factor}\r\n          countryColor={countryColor}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useMemo, useState } from \"react\";\r\n\r\nimport { Typography } from \"antd\";\r\nimport WorldMap from \"../worldmap/WorldMap\";\r\nimport { data } from \"../../data\";\r\nimport usePromise from \"react-use-promise\";\r\nimport { SidePanel } from \"../side_panel/side_panel\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nexport const Overview = () => {\r\n  const [selectedCountries, setSelectedCountries] = useState<string[]>([]);\r\n\r\n  const [focuedFactor, setFocusedFactor] = useState<string | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const [data_ready] = usePromise(() => data, []);\r\n\r\n  const detailData = useMemo(() => {\r\n    return (\r\n      data_ready?.filter(\r\n        (datum) => selectedCountries.indexOf(datum.Country) != -1\r\n      ) || []\r\n    );\r\n  }, [selectedCountries, data_ready]);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\", width: \"100%\" }}>\r\n      <div style={{ width: \"71%\", paddingTop: \"10px\" }}>\r\n        <Title style={{ textAlign: \"center\" }} level={5}>\r\n          Global Pandemic Overview\r\n        </Title>\r\n        <div style={{ margin: \"auto 0\" }}>\r\n          <WorldMap\r\n            data={data_ready || []}\r\n            onSelectionChanged={setSelectedCountries}\r\n            type={focuedFactor || \"map\"}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ width: \"29%\", padding: \"15px\" }}>\r\n        {!detailData || detailData.length == 0 ? (\r\n          \"Please select a country to view details\"\r\n        ) : (\r\n          <SidePanel data={detailData} onFactorChanged={setFocusedFactor} factor={focuedFactor}/>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useMemo, useState } from \"react\";\r\nimport BarChart from \"./BarChart\";\r\nimport \"./App.css\";\r\nimport WorldMap from \"./components/worldmap/WorldMap\";\r\nimport { Slider, InputNumber, Layout, Menu } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Typography } from \"antd\";\r\nimport { data, DataEntry } from \"./data\";\r\nimport usePromise from \"react-use-promise\";\r\nimport { SidePanel } from \"./components/side_panel/side_panel\";\r\nimport { Overview } from \"./components/overview/overview\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nconst minDate = new Date(1970, 0, 1);\r\nconst maxDate = new Date(2018, 0, 1);\r\nconst daySpan = Math.round(\r\n  (maxDate.getTime() - minDate.getTime()) / (24 * 3600 * 1000)\r\n);\r\nconst monthSpan = (2018 - 1970) * 12;\r\n\r\nconst dateConverter = (pos?: number) => new Date(1970, pos ?? 0, 1);\r\nconst tipFormatter = (pos?: number) =>\r\n  dateConverter(pos).toLocaleDateString(\"en-US\");\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Overview />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}